
        RAMP/SMART Database Installation Instructions
        ---------------------------------------------

This file contains installation instructions for setting up MySQL accounts
and demonstration, development, test, and production databases for Ramp
(Record and Activity Management Program) and Smart (Software for Managing
Academic Records and Transcripts).

Getting Ready:
--------------

The installation instructions in this file refer to two SQL script
files, createRampDatabases.sql (for both Ramp and Smart) and
createSmartDatabases.sql (Smart only), to be edited and run.  To
prevent the possibility that local customizations in these files
might be overwritten by future software updates, the initial download
contains files called createRampDatabasesTemplate.sql and
createSmartDatabasesTemplate.sql in the installation directory
instead.  For an initial installation, therefore:
    * Copy createRampDatabasesTemplate.sql to createRampDatabases.sql.
    * Copy createSmartDatabasesTemplate.sql to createSmartDatabases.sql.
In the instructions that follow, edit the new files, leaving the
original template files untouched.

The installation directory also contains sample files for initializing
the database schema(s) that will be used for different database
environments (e.g., demonstration, development, test, and production
environments), and for populating demonstration or test tables with some 
initial data.  To know which sample files to use, and how to change them
for the specific needs of the application, the first step is to decide
which database environments are to be setup.  For example, one might
just set up Ramp and Smart demo databases to learn more about the the
application.  A Ramp/Smart developer, on the other hand, might create
development and regression testing environments, while someone running
Smart as a production system might create production, user testing,
and regression testing environments.

Addressing Security Concerns:
-----------------------------

To protect the security of the Ramp/Smart database, the database administrator
responsible for creating and maintaining the database must take
several steps before creating the users and databases used by Ramp.

    * First, change the permissions of the createRampDatabases.sql
      and createSmartDatabases.sql files in the installation directory
      so that they can be read only by the database administrator
      (access mode of 400 or 600).

    * The database administrator's .mysql_history file should also be
      readable only by its owner.

    * Ramp's application/configs/application.ini file should also be
      protected, but must be readable by the web server.  The best way
      to achieve this could be, for example, to have the application.ini
      owned by the database administrator but part of the same group as
      the httpd web server (or vice versa).

    * The database administrator should create a mysql option file, again
      readable only by its owner, containing the rampdba password.  This
      could be a .my.cnf file in the home directory or an options file
      somewhere else.  The file would include:
        [client]
        password=the_rampdba_password
      It might also include the user, host, or other options.  This file
      provides a convenience to the database administrator, cutting down
      on the need to type in the password, and simultaneously serves to
      protect the password from plain-text transmission.

Setting Up an Administrative MySQL Account:
-------------------------------------------

    * After those protective measures have been taken, change the
      rampdba password in the createRampDatabases.sql file to the
      actual password that will be used.  (This MySQL account is
      designed to be used by the database administrator when working
      in MySQL or phpMyAdmin directly.)  The user name may also
      be changed if desired; for example, rampdba could be changed
      to smartdba.  If there will be multiple database administrators,
      create a user account for each similar to the provided rampdba
      account.  Administrators should each have a .my.cnf file and should
      protect their .mysql_history files.

    * If the rampdba user name has been changed to something else (e.g.,
      smartdba), then update the createSmartDatabases.sql file,
      changing every occurrence of rampdba to the new user name.  If
      there are multiple database administrator accounts, give each
      of them the same permisions in createSmartDatabases.sql as
      the original rampdba account.

Setting Up Databases and Web-Access MySQL Accounts:
---------------------------------------------------

Ramp and Smart each use a single MySQL account to access a database;
authorization is achieved not by using different MySQL accounts with
different privileges but through a set of roles defined in Ramp/Smart
with different privileges defined through access rules.  A separate
mechanism associates each Ramp or Smart user with a role.  Since
the MySQL account used by Ramp/Smart for web access to a particular
database must accomodate all users of that database, it will have
very wide-ranging privileges (although not as wide-ranging as the
rampdba database administrator account, which can add, delete, and
re-structure tables).

    * Update the createRampDatabases.sql and createSmartDatabases.sql
      files, uncommenting, modifying, and copying lines as necessary,
      to create the databases and web-access MySQL accounts that you
      want.  For example, for a minimal, demo version of Ramp,
      simply uncomment the SQL lines referring to rampdemo.  (See
      the next bullet for more information if you are using Smart.)

      Appropriate permissions for the rampdba and sample user accounts
      are illustrated in createRampDatabases.sql and
      createSmartDatabases.sql.

    * If you are planning to use Smart, you probably do not need to make
      many changes to createRampDatabases.sql except to set the password
      for the rampdba account, create additional dba accounts if
      necessary, and, perhaps, to uncomment commands dealing with
      the ramp_demo database if you want to run that.  To create
      development and test Smart databases, you need only uncomment
      the appropriate commands in createSmartDatabases.sql.  To
      create other databases, such as a production database or other
      test databases, you will need to copy and modify the appropriate
      commands to create the databases, their associated Smart MySQL
      accounts, and the appropriate privileges.

      For example, a developer might create the following databases
      and MySQL accounts:
            smart_dev   'smartuser'@'localhost', 'smartuser'@'%'
            smart_test  'smartuser'@'localhost', 'smartuser'@'%'
      while a production environment might use the following:
            smart             'smartuser'@'localhost', 'smartuser'@'%'
            smart_user_tests  'smartuser'@'localhost', 'smartuser'@'%'
            smart_regr_tests  'smartuser'@'localhost', 'smartuser'@'%'

    * Update the application/configs/application.ini file to
      reflect the databases, web-access MySQL accounts, and passwords
      defined in createRampDatabases.sql and createSmartDatabases.sql.

Setting Up Domain Users, Authentication, and Authorization:
-----------------------------------------------------------

Each Ramp or Smart user must have a Ramp/Smart user account that
is associated with a role for authorization.  A group of users may
have the same role within the system; it is also possible for a
single user to play multiple roles by creating a new role that
inherits privileges from two or more existing roles.  There is one
role, 'guest', built into Ramp; other, more meaningful roles must
be defined in Ramp's application/configs/application.ini file.
(Examples are provided in rampApplicationTemplate.ini and
smartApplicationTemplate.ini.)  A special table within a Ramp/Smart
database, ramp_auth_users, associates users with their roles.  A
second table, ramp_auth_auths, defines role-based access control
rules to the activities and tables the comprise the Ramp application.

In addition to associating users with authorization roles, the
ramp_auth_users file may be used for user authentication if an
external mechanism such as Active Directory is not used.  In this
case, it would track passwords, as well as usernames and roles.  It
can also store identifying and contact information about the users,
such as names and email addresses.  If, on the other hand, the
application stores such information for its own purposes (as Smart
does in the Person table), then it is better practice to merely
store a reference to the user's key from the application table
(e.g., their Person ID) in ramp_auth_users rather than to duplicate
information that is in that table, such as name and email address.
The ramp_auth_users.ini and smart_auth_users.ini files in the
settings/ManageAuths directory provide examples of table settings
covering both situations (storing all necessary user information vs.
referencing such information from another table).

    * Update the application/configs/application.ini file to specify
      the non-guest roles you want to define for each database.
      (The rampApplicationTemplate.ini file is already setup to
      configure the simple ramp_demo database described in
      installation/createRampDatabasesTemplate.sql.  The
      smartApplicationTemplate.ini file provides more complex examples.)

    * Using the rampDemoSetup.sql, SmartSampleSetup/smartDemoSetup.sql,
      and SmartSampleSetup/smartDevSetup.sql files as models,
      create setup files for each Ramp or Smart database you have
      created.  (The setup files may be very similar, differing
      only in the name of the database, or in the amount of data
      being included.)  The setup files should define the table
      structures (and optionally the initial data) for the tables
      in your application, and should create and populate ramp_auth_users
      and ramp_auth_auths tables for each Ramp or Smart database
      you have created.

      For example, to set up a Smart development database, modify the
      SmartSampleSetup/smartDevSetup.sql file as needed.  To make a
      second, equivalent database for testing, copy smartDevSetup.sql
      and change the name of the database.  To make a production
      database with the same table structures but no initial data,
      edit the various table setup files to remove the data insertion.

    * Using a MySQL account that has permission to create new
      accounts and new databases, run MySQL from the terminal or
      command-line and read in your database setup files, e.g.,
      with the source command:
          cd ramp/installation
          mysql -u root -p
          Password: *******
          mysql> source rampDemoSetup.sql

    * To create the MySQL accounts for these databases, read
      in the createRampDatabases.sql file:
          mysql> source createRampDatabases.sql

      If using Smart, do the same with createSmartDatabases.sql.
