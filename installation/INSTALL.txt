        Ramp/Smart Installation

Ramp is built on top of an AMP stack (Apache, MySQL, PHP) and the
Zend Framework.

AMP:
----
These installation instructions assume that you have a working AMP
implementation, which may come bundled with your operating system,
may be created by downloading and installing the Apache, MySQL, and
PHP components separately, or may be downloaded as a bundled,
integrated unit (for example, MAMP, LAMP, XAMPP, or WAMP). If you
do not have one of these, see the following websites for installation
and tutorials:

    XAMPP: http://www.apachefriends.org/en/xampp.html
        Works with Mac, Windows & Linux
    MAMP: http://www.mamp.info/en/index.html
        Works with Mac
    WAMP: http://www.wampserver.com/
        Works with Windows
    LAMP: *****
        Works with Linux
    MySQL:  http://www.mysql.com/
    PHP:  http://www.php.net/

Depending on the system you are using, you may need to update your httpd
configuration (e.g., /etc/apache2/httpd.conf) to load the PHP module,
turn on virtual hosting, and allow overrides to all in your
DocumentRoot directory.

Will need directions about setting up virtual hosts somewhere.

In order to get better encryption, PHP recommends 5.3.7 or later,
although I am currently running 5.4.19 and still getting MD5 when I use
crypt without a salt.

(If you make a link from your server's document root to folders or
directories in personal space, make sure the permissions on the link and
target directory will allow your web server to follow the link.)


Zend Framework:
---------------
Ramp was developed using Zend Framework 1.11, but has also been
tested under Zend Framework 1.12.  NOTE: Ramp has NOT yet been
ported to Zend Framework 2, which is a complete redesign of the
framework.  To download Zend 1.12, see
    http://www.zend.com/community/downloads

Markdown Library:
-----------------
Ramp uses Michel Fortin's PHP Markdown Lib 1.3, which depends on PHP
5.3.


Getting Started with Ramp:
--------------------------
Once you have a server and a database, you must download the most
recent version of RAMP from https://github.com/AlyceBrady/ramp.

Since Ramp uses the Zend Framework, copy or link the Zend Framework
library to the library subdirectory within Ramp.  For example, if
.../ZendFrameworkLoc refers to where your ZendFramework is installed
and .../RampLoc refers to where RAMP is installed, then
copy or link the .../ZendFrameworkLoc/library/Zend directory or folder
into the .../RampLoc/library directory.  (If you use a link, make sure
the permissions on the link and target directory will allow the server
to follow the link to the Zend framework directory.)

Ramp expects to find a file called application.ini in the
.../RampLoc/application/configs/ directory.  This file would normally
contain Ramp configuration information, some of which may have to
be customized for your environment.  To prevent the possibility
that local customizations in an application.ini file might be
overwritten by future Ramp updates, the Ramp download contains two
files called smartApplicationTemplate.ini (for Smart application
installations) and rampApplicationTemplate.ini (for any other use
of Ramp) instead of providing application.ini.  For an initial
installation, create a copy of whichever of the template files is
more appropriate, call it application.ini, and edit it as explained in
the INSTALL_DB.txt file.  When installing a Ramp update, you will
need to compare your application.ini file against the new
smartApplicationTemplate.ini or rampApplicationTemplate.ini file,
incorporating new changes as appropriate.

Setting up the Ramp Database:
-----------------------------
See the INSTALL_DB.txt file, which includes instructions on setting
up MySQL accounts, protecting the account passwords, and setting
up initial databases & tables.

Setting up Ramp on Your Server:
-------------------------------
[The following section is still under construction...]

… [Write instructions for setting up vhosts.] … See the vhostExamples.conf
file in the installation directory for examples on setting up virtual
hosts on your machine for the demonstration and development/production
databases.  You may need to first enable virtual hosting within
/etc/apache2/httpd.conf by uncommenting the Include line for
httpd-vhosts.conf.

If the server is being used on the local machine, you need
to edit /etc/hosts and add lines that resolve the virtual server
names from vhosts to the local machine.  For example,
    127.0.0.1       ramp.development
If the server should be accessible to a limited, pre-defined set
of machines, edit /etc/hosts files on those machines to resolve the
virtual hostnames to the machine servicing Ramp.  If Ramp should
be visible beyond that, you probably need to register the server name.
(If you can’t, or don’t want to, get vhosts to work, you may be able
to get the same results with .htaccess.  Uncomment the last line and
specify the correct APPLICATION_ENV (production, development, testing,
rampdemo, smartdemo, etc.).  Without vhosts, though, it’s not
as easy to have multiple Ramp/Smart database environments running on
one server.)

