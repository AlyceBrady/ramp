<?php
$table = $this->tableInfo;

// Set page and window title.
$this->headTitle($this->title);         // Set in controller
$tableTitle = $table->getTitle();
$this->headTitle($tableTitle);

// Get values from set table for title area and data area.
$seqSetting = $this->seqSetting;        // Set in controller
$tableFootnote = $table->getTableFootnote();
$visibleFieldInfo = $table->getVisibleFields();
$keyFields = $table->getPrimaryKeys();
$tableValues = $this->dataToDisplay;    // Set in controller
$highlightEveryN = 2;

// Determine instructions and messages specific to this page.
$instructions = "";
$msgs = $this->msgs;                    // Set in controller
$msgs[] = "Found " . count($tableValues) . " entries.";
$errormsgs = $this->errMsgs;            // Set in controller
$errormsgs[] = $this->undefinedFieldsErrorMsg;

// Construct core parameters to send to all actions.
$commonParams = $this->baseParams;      // Set in controller
$searchParams = $commonParams + array('action'=>'search');
$addParams = $commonParams + array('action'=>'add');
$selectParams = $commonParams + array('action'=>'page-display');
$deleteParams = $commonParams + array('action'=>'delete');
$displayAllParams = $commonParams + array('action' => 'multi-display');
?>

<div id="titlebar-area">

<!-- Display buttons in sidebar -->

<div id="title-sidebar" class="sidebar"> <!-- Contains action buttons -->
    <p><a href="<?php echo $this->url($searchParams, null, true);
        ?>">Search</a></p>
    <p><a href="<?php echo $this->url($addParams, null, true);
        ?>">Add new entry</a></p>
    <?php if ( $this->displayingSubset ) : ?>
    <p><a href="<?php echo $this->url($displayAllParams, null, true);
        ?>">Display all</a></p>
    <?php endif; ?>
    <!-- Add "Edit in place" link or button later? Changes meaning of Select -->
</div>  <!-- End of "sidebar" -->

<!-- Display title and messages -->

<div id="left-column" class="column">  <!-- Contains title block and msgs -->
<?php echo $this->partial("table/_titleblockAndMsgs.phtml",
            array('title'=>$tableTitle, 'description' => "",
                  'footnote'=>$tableFootnote, 'instructions'=>$instructions,
                  'msgs'=>$msgs, 'errormsgs'=>$errormsgs)); ?>
</div>  <!-- End of "left-column" -->

</div>  <!-- End of "titlebar-area" -->

<div id='record-table'>
<table>

<!-- DISPLAY COLUMN HEADERS -->
<tr>
    <?php
    foreach($visibleFieldInfo as $fieldName => $field) :
        $title = $field->getFieldFootnote();
        $title = $title ? " title='$title'" : "";
        echo "<th" . $this->escape($title) . ">";
        echo $this->escape($field->getLabel()) . "</th>";
    endforeach;
    ?>
</tr>

<!-- DISPLAY RECORDS -->
<?php
$rowNum = 0;
foreach($tableValues as $recordValues) :
?>

    <!-- Display table entries in rows... -->
    <tr>
    <?php

    // Determine fields to display, whether to highlight, and which 
    // fields to pass as parameters to select and delete requests.
    $rowNum++;
    $rowSpecParams = array();
    $class = ($rowNum % $highlightEveryN) ? "" : " class='highlighted'";
    foreach ( $keyFields as $keyFieldName => $ignoredFieldInfo ) :
        $rowSpecParams[$keyFieldName] = $recordValues[$keyFieldName];
    endforeach;
    ?>

    <!-- Display visible field values. -->
    <?php
    foreach($visibleFieldInfo as $fieldName => $field) :
        $title = $field->getFieldFootnote();
        $title = $title ? " title='$title'" : "";
        echo "<td" . $this->escape($class) . $this->escape($title) . ">";
        echo $this->escape($recordValues[$fieldName]) . "</td>";
    endforeach;
    ?>

    <!-- Display select/delete links -->
    <td>
        <a href="<?php echo $this->url(
            $selectParams + $rowSpecParams, null, true); ?>">Select</a>
        <a href="<?php echo $this->url(
            $deleteParams + $rowSpecParams, null, true); ?>">Delete</a>
    </td>
    </tr>

<?php endforeach; ?>

</table>
</div>  <!-- End of "record-table" -->

<?php
/*

function getInstructions()
{
    $s = $this->getSortingInstructions();
    if ( $this->userMayModifyTable() )
        $s .= $this->getModificationIconInstructions();
    return $s;
}
function getSortingInstructions()
{
    return "Click on a column heading to sort by that column.\n";
}
function getModificationIconInstructions()
{
    $s = "<br>All kinds of good stuff."
    return $s;
}

// For each row, provide select ("drill down") and delete.
// If in "edit in place" mode, "select" means make current row editable, 
// not switch to record view.  When current row is editable, indicate 
// which fields are required, recommended, or neither.

*/

?>
