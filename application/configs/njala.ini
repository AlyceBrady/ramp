[ramp_basics]

; Customize the time zone based on actual geographic location.
phpSettings.date.timezone = "America/New_York"

; System errors (PHP/Zend) should not be displayed by default.  This may
; be overridden for development environments.
phpSettings.display_startup_errors = 0
phpSettings.display_errors = 0
resources.frontController.params.displayExceptions = 0

; Define the basic Zend application/directory structure being used.
includePaths.library = APPLICATION_PATH "/../library"
appnamespace = "Application"
bootstrap.path = APPLICATION_PATH "/Bootstrap.php"
bootstrap.class = "Bootstrap"
resources.frontController.controllerDirectory = APPLICATION_PATH "/controllers"
resources.layout.layoutPath = APPLICATION_PATH "/layouts/scripts/"
resources.view.doctype = "XHTML1_STRICT"

; Define Ramp additions to the basic structure.
autoloaderNamespaces[]="Ramp"

; Define the authentication type and, if internal, the default password.
ramp.authenticationType = "internal"
ramp.defaultPassword = "no_pw"

; Define the session timeout (if no actions taken in this amount of time)
; Timeout is in seconds.  Timeout of 0 means no timeout.
ramp.sessionTimeout = 300;

; Define the type and location of the database.
resources.db.adapter = PDO_MYSQL
resources.db.params.host = localhost

[application_defaults : ramp_basics]

; The ACL properties in this section are specific to an application, but are
; generally the same in different environments of the same application
; (e.g., the same across production, development, or testing environments.)

; Define Access Control List (ACL) roles.  Format:
;    ramp.aclNonGuestRole.newRole = inheritFromExistingRole
; The 'guest' role is hard-coded in Ramp for non-logged in users.
; The 'ramp_dba' role is for administrative users who will be able to add
; new users and define new authorization rules.  For this demo, the
; administrative users inherit the permissions of both the hr role and
; the reg role.
ramp.aclNonGuestRole.hr = guest
ramp.aclNonGuestRole.reg = guest
ramp.aclNonGuestRole.ramp_dba[] = hr
ramp.aclNonGuestRole.ramp_dba[] = reg
ramp.aclNonGuestRole.smart_dba = ramp_dba

; Define basic Access Control List (ACL) resources.  Format:
;    Controller actions:    "controller::action"
;    Activity directories:  "activity::index::directory"
;    Table/Report actions:  "table::action::db_table_name"  (not setting!)
; Other resources are defined in Ramp/Smart source code or in the
; Authorizations table when the table is created.
ramp.aclResources[] = "activity::index::."
ramp.aclResources[] = "activity::index::PublicActivities"
ramp.aclResources[] = "activity::index::Admin"

; Define basic Access Control List (ACL) rules.  Format:
;    "role::resource"
; The following rules give:
;    * the "guest" role (users not logged in) access to activities in
;      the PublicActivities directory
;    * users with the ramp_dba role:
;        -- access to activities in the Admin directory.
;        -- access to several administrative actions in AuthController
ramp.aclRules[] = "guest::activity::index::PublicActivities"
ramp.aclRules[] = "ramp_dba::activity::index::Admin"
ramp.aclRules[] = "ramp_dba::auth::reset-password"
ramp.aclRules[] = "ramp_dba::auth::validate-roles"
ramp.aclRules[] = "ramp_dba::auth::validate-acl-rules"

; The properties beyond this point are likely to be customized differently
; for different application environments (e.g., demos or production,
; development, or testing environments.)  The initial properties in this
; section act as defaults for other environments.

; Define properties that control the look and feel.
ramp.title = "Smart"
ramp.subtitle = "Software for Managing Academic Records and Transcripts"
ramp.applicationShortName = "Smart"
ramp.icon = "/images/blueSmart.ico"
ramp.css = "/css/site.css"

; Define the root directory for finding documentation files.
ramp.documentRoot = APPLICATION_PATH "/docs"

; Define properties that control the activities and table settings available.
ramp.menuDirectory = APPLICATION_PATH "/settings"
ramp.settingsDirectory = APPLICATION_PATH "/settings"
ramp.menuFilename = "menu.ini"
ramp.roleBasedMenus['smart_dba'] = "dbaMenu.ini"
ramp.initialActivity = "index.act"

[njala : application_defaults]

; Define or override properties that are specific to the Njala implementation.

; Define properties for accessing the database.
resources.db.params.username = smartuser
resources.db.params.password = "need_password"
resources.db.params.dbname = smart_production

; Proposed roles that may correspond to Njala's organizational structure
; (not implemented yet).
; -----------
; ramp.aclNonGuestRole.aa_mgmt = guest
; ramp.aclNonGuestRole.aa_staff = aa_mgmt
; ramp.aclNonGuestRole.aa_admin = aa_staff
; ramp.aclNonGuestRole.sa_mgmt = guest
; ramp.aclNonGuestRole.sa_staff = sa_mgmt
; ramp.aclNonGuestRole.sa_admin = sa_staff
; ramp.aclNonGuestRole.registrar[] = aa_mgmt
; ramp.aclNonGuestRole.registrar[] = sa_mgmt
; ramp.aclNonGuestRole.univ_data_entry[] = hr_staff
; ramp.aclNonGuestRole.univ_data_entry[] = aa_staff
; ramp.aclNonGuestRole.univ_data_entry[] = sa_staff
; ramp.aclNonGuestRole.ramp_dba[] = aa_admin
; ramp.aclNonGuestRole.ramp_dba[] = sa_admin

[njala-dev : njala]

; Define or override properties specific to the development version of the
; Njala implementation.

phpSettings.display_startup_errors = 1
phpSettings.display_errors = 1
resources.frontController.params.displayExceptions = 1

; Timeout is in seconds.  Timeout of 0 means no timeout.
ramp.sessionTimeout = 0;

resources.db.params.dbname = njala_dev

ramp.menuDirectory = APPLICATION_PATH "/NjalaSettings"
ramp.settingsDirectory = APPLICATION_PATH "/NjalaSettings"
ramp.menuFilename = "menu.ini"
ramp.roleBasedMenus['smart_dba'] = "dbaDevMenu.ini"

