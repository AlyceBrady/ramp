[prototypes : smart_defaults]

; Define or override properties specific to a development version of the
; application.

; Prototypes are starting points for developers, so display all possible
; errors!  (Set all three to 0 in production.)
phpSettings.display_startup_errors = 1
phpSettings.display_errors = 1
resources.frontController.params.displayExceptions = 1

; Timeout is in seconds.  Timeout of 0 means no timeout.  300 would be a
; five-minute timeout.
ramp.sessionTimeout = 0;

; Define Access Control List (ACL) roles.  Format:
;    ramp.aclNonGuestRole.newRole = inheritFromExistingRole
; The 'ramp_dba' role is for administrative users who will be able to add
; new users and define new authorization rules.  In this case, the
; administrative user has the same permissions as any other
; member of staff plus those specifically
; authorized for the smart_dba role.  The testing or development
; environments could give the smart_dba role all permissions.
ramp.aclNonGuestRole.ramp_dba = any_staff
ramp.aclNonGuestRole.smart_dba = ramp_dba

[njala_prototype : prototypes]

; Redefine and add new Access Control List (ACL) roles.
; Roles beginning with '_' are for use in the inheritance hierarchy only
; (to greatly reduce duplication of rules) but are not the "visible"
; roles to be given to actual staff members.
; The 'developer' role has access to everything for developer's convenience.
ramp.aclNonGuestRole._min_person_access = any_staff
ramp.aclNonGuestRole._min_staff_access = _min_person_access
ramp.aclNonGuestRole._min_stu_access = _min_person_access
ramp.aclNonGuestRole._min_all_people_access[] = _min_staff_access
ramp.aclNonGuestRole._min_all_people_access[] = _min_stu_access
ramp.aclNonGuestRole.dean_stu_staff = _min_stu_access
ramp.aclNonGuestRole.dean_stu = _min_stu_access
ramp.aclNonGuestRole.fin_mgmt = _min_all_people_access
ramp.aclNonGuestRole.fin_hr_mod = _min_staff_access
ramp.aclNonGuestRole.fin_stu_mod = _min_stu_access
ramp.aclNonGuestRole._person_modifier = guest
ramp.aclNonGuestRole.hr_view = _min_all_people_access
ramp.aclNonGuestRole.hr_mod[] = hr_view
ramp.aclNonGuestRole.hr_mod[] = _person_modifier
ramp.aclNonGuestRole.curric_mod = any_staff
ramp.aclNonGuestRole.admiss_view = _min_stu_access
ramp.aclNonGuestRole.admiss_mod[] = admiss_view
ramp.aclNonGuestRole.admiss_mod[] = _person_modifier
ramp.aclNonGuestRole.any_ss = _min_all_people_access
ramp.aclNonGuestRole.sec_ss_mgmt = any_ss
ramp.aclNonGuestRole.sec_ss_staff = sec_ss_mgmt
ramp.aclNonGuestRole.campus_ss_mgmt = any_ss
ramp.aclNonGuestRole.campus_ss_staff = campus_ss_mgmt
ramp.aclNonGuestRole.acad_aff_mgmt[] = admiss_view
ramp.aclNonGuestRole.acad_aff_mgmt[] = sec_ss_mgmt
ramp.aclNonGuestRole.acad_aff_mgmt[] = campus_ss_mgmt
ramp.aclNonGuestRole.registrar[] = fin_mgmt
ramp.aclNonGuestRole.registrar[] = hr_view
ramp.aclNonGuestRole.registrar[] = acad_aff_mgmt
ramp.aclNonGuestRole.developer[] = fin_hr_mod
ramp.aclNonGuestRole.developer[] = fin_stu_mod
ramp.aclNonGuestRole.developer[] = hr_mod
ramp.aclNonGuestRole.developer[] = curric_mod
ramp.aclNonGuestRole.developer[] = admiss_mod
ramp.aclNonGuestRole.developer[] = sec_ss_staff
ramp.aclNonGuestRole.developer[] = campus_ss_staff
ramp.aclNonGuestRole.developer[] = registrar
ramp.aclNonGuestRole.developer[] = smart_dba

; Define additional resources and rules for Njala-customized documentation.
;   The first 4 lines are redundant & shouldn't be necessary, but it
;   didn't work without them!
ramp.aclResources[] = "activity::index::../docs/smartDocs"
ramp.aclResources[] = "document::index::smartDocs"
ramp.aclRules[] = "guest::activity::index::../docs/smartDocs"
ramp.aclRules[] = "guest::document::index::smartDocs"
ramp.aclResources[] = "activity::index::../docs/NjalaDocs"
ramp.aclResources[] = "document::index::NjalaDocs"
ramp.aclRules[] = "guest::activity::index::../docs/NjalaDocs"
ramp.aclRules[] = "guest::document::index::NjalaDocs"

; Define properties for accessing the database.
resources.db.params.username = smartdev
resources.db.params.password = "smartdev_passwd"
resources.db.params.dbname = njala_proto

; Redefine properties that control the look and feel.
ramp.title = "Smart"
ramp.applicationShortName = "Njala - Smart"
ramp.footer = "Njala University"

; Define properties that control the activities and table settings available.
ramp.menuDirectory = APPLICATION_PATH "/NjalaSettings"
ramp.activitiesDirectory = APPLICATION_PATH "/NjalaSettings"
ramp.settingsDirectory = APPLICATION_PATH "/NjalaSettings"

; Redefine properties that control menus and initial activities.
; ramp.menuFilename, initialActivity, roleBasedMenus['smart_dba'] and
; roleBasedInitActivities['smart_dba'] are defined in smart_defaults.
ramp.roleBasedMenus['dean_stu'] = "Smart/menu.ini"
ramp.roleBasedMenus['dean_stu_staff'] = "Smart/menu.ini"
ramp.roleBasedMenus['fin_mgmt'] = "Smart/finMenu.ini"
ramp.roleBasedMenus['fin_hr_mod'] = "Smart/finMenu.ini"
ramp.roleBasedMenus['fin_stu_mod'] = "Smart/finMenu.ini"
ramp.roleBasedMenus['hr_view'] = "Smart/hrMenu.ini"
ramp.roleBasedMenus['hr_mod'] = "Smart/hrMenu.ini"
ramp.roleBasedMenus['curric_mod'] = "Smart/menu.ini"
ramp.roleBasedMenus['admiss_view'] = "Smart/admissMenu.ini"
ramp.roleBasedMenus['admiss_mod'] = "Smart/admissMenu.ini"
ramp.roleBasedMenus['sec_ss_mgmt'] = "Smart/ssMenu.ini"
ramp.roleBasedMenus['sec_ss_staff'] = "Smart/ssMenu.ini"
ramp.roleBasedMenus['acad_aff_mgmt'] = "Smart/secMenu.ini"
ramp.roleBasedMenus['registrar'] = "Smart/secMenu.ini"
ramp.roleBasedMenus['developer'] = "devMenu.ini"
ramp.roleBasedInitActivities['fin_mgmt'] = "Smart/finIndex.act"
ramp.roleBasedInitActivities['fin_hr_mod'] = "Smart/finIndex.act"
ramp.roleBasedInitActivities['fin_stu_mod'] = "Smart/finIndex.act"
ramp.roleBasedInitActivities['hr_view'] = "Smart/hrIndex.act"
ramp.roleBasedInitActivities['hr_mod'] = "Smart/hrIndex.act"
ramp.roleBasedInitActivities['curric_mod'] = "Smart/index.act"
ramp.roleBasedInitActivities['admiss_mod'] = "Smart/admissIndex.act"
ramp.roleBasedInitActivities['admiss_view'] = "Smart/admissIndex.act"
ramp.roleBasedInitActivities['sec_ss_mgmt'] = "Smart/ssIndex.act"
ramp.roleBasedInitActivities['sec_ss_staff'] = "Smart/ssIndex.act"
ramp.roleBasedInitActivities['acad_aff_mgmt'] = "Smart/secIndex.act"
ramp.roleBasedInitActivities['registrar'] = "Smart/secIndex.act"
ramp.roleBasedInitActivities['developer'] = "devIndex.act"

