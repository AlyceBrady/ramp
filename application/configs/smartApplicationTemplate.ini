[ramp_basics]

; Customize the time zone based on actual geographic location.
phpSettings.date.timezone = "America/New_York"

; System errors (PHP/Zend) should not be displayed by default.  This may
; be overridden for development environments.
phpSettings.display_startup_errors = 0
phpSettings.display_errors = 0
resources.frontController.params.displayExceptions = 0

; Define the basic Zend application/directory structure being used.
includePaths.library = APPLICATION_PATH "/../library"
appnamespace = "Application"
bootstrap.path = APPLICATION_PATH "/Bootstrap.php"
bootstrap.class = "Bootstrap"
resources.frontController.controllerDirectory = APPLICATION_PATH "/controllers"
resources.layout.layoutPath = APPLICATION_PATH "/layouts/scripts/"
resources.view.doctype = "XHTML1_STRICT"

; Define Ramp additions to the basic structure.
autoloaderNamespaces[]="Ramp"
resources.frontController.plugins.ActionSetup = "Ramp_Controller_Plugin_ActionSetup"

; Define the authentication type and, if internal, the default password.
ramp.authenticationType = "internal"
ramp.defaultPassword = "no_pw"

; Define the session timeout (if no actions taken in this amount of time)
; Timeout is in seconds.  Timeout of 0 means no timeout.
ramp.sessionTimeout = 300;

; Define the type and location of the database.
resources.db.adapter = PDO_MYSQL
resources.db.params.host = localhost

[application_defaults : ramp_basics]

; The ACL properties in this section are specific to an application, but are
; generally the same in different environments of the same application
; (e.g., the same across production, development, or testing environments.)

; Define Access Control List (ACL) roles.  Format:
;    ramp.aclNonGuestRole.newRole = inheritFromExistingRole
; The 'guest' role is hard-coded in Ramp for non-logged in users.
; The 'ramp_dba' role is for administrative users who will be able to add
; new users and define new authorization rules.  In this case, the
; administrative user has only guest permissions and those specifically
; authorized for the ramp_dba role.  The testing or development
; environments could give the ramp_dba role all permissions.
ramp.aclNonGuestRole.hr_or_reg = guest
ramp.aclNonGuestRole.hr_mgmt = guest
ramp.aclNonGuestRole.hr_staff = hr_mgmt
ramp.aclNonGuestRole.hr_admin = hr_staff
ramp.aclNonGuestRole.regist_mgmt = guest
ramp.aclNonGuestRole.regist_staff = regist_mgmt
ramp.aclNonGuestRole.regist_admin = regist_staff
ramp.aclNonGuestRole.registrar[] = hr_mgmt
ramp.aclNonGuestRole.registrar[] = regist_mgmt
ramp.aclNonGuestRole.ramp_dba = guest
ramp.aclNonGuestRole.smart_dba = ramp_dba

; Define basic Access Control List (ACL) resources.  Format:
;    Controller actions:    "controller::action"
;    Activity directories:  "activity::index::directory"
;    Table/Report actions:  "table::action::db_table_name"  (not setting!)
; Other resources are defined in Ramp/Smart source code or in the
; Authorizations table.
ramp.aclResources[] = "activity::index::."
ramp.aclResources[] = "activity::index::../docs/rampDocs"
ramp.aclResources[] = "activity::index::Admin"

; Define basic Access Control List (ACL) rules.  Format:
;    "role::resource"
; The following rules give:
;    * the "guest" role (users not logged in) access to activities in
;      the application/docs/rampDocs directory (the commented-out rule
;      gives access to the top-level activities directory also)
;    * users with the ramp_dba role:
;        -- access to activities in the Admin directory.
;        -- access to several administrative actions in AuthController
; ramp.aclRules[] = "guest::activity::index::."
ramp.aclRules[] = "guest::activity::index::../docs/rampDocs"
ramp.aclRules[] = "ramp_dba::activity::index::Admin"
ramp.aclRules[] = "ramp_dba::auth::reset-password"
ramp.aclRules[] = "ramp_dba::auth::validate-roles"
ramp.aclRules[] = "ramp_dba::auth::validate-acl-rules"

; The properties beyond this point are likely to be customized differently
; for different application environments (e.g., demos or production,
; development, or testing environments.)  The initial properties in this
; section act as defaults for other environments.

; Define properties for accessing the database.
resources.db.params.username = smartuser
resources.db.params.password = "need_password"
; resources.db.params.dbname = smart
;    (needs to be set separately in each section)

; Define properties that control the look and feel.
ramp.title = "Smart"
ramp.subtitle = "Software for Managing Academic Records and Transcripts"
ramp.applicationShortName = "Smart"
ramp.icon = "/images/blueSmart.ico"
ramp.css = "/css/site.css"

; Define the root directory for finding documentation files.
ramp.documentRoot = APPLICATION_PATH "/docs"

; Define properties that control the activities and table settings available.
ramp.menuDirectory = APPLICATION_PATH "/settings"
ramp.activitiesDirectory = APPLICATION_PATH "/settings"
ramp.settingsDirectory = APPLICATION_PATH "/settings"
ramp.menuFilename = "menu.ini"
ramp.roleBasedMenus['ramp_dba'] = "dbaMenu.ini"
ramp.roleBasedMenus['smart_dba'] = "dbaMenu.ini"
ramp.initialActivity = "index.act"

[production : application_defaults]

; Define or override properties specific to the production version of the
; application.

resources.db.params.dbname = smart_production

[testing : application_defaults]

; Define or override properties specific to a testing version of the
; application.  (For example, a test clone of production for practice
; or experimentation.)  A testing environment should have a different
; look and feel from the production environment so that users do not
; confuse the two.

phpSettings.display_startup_errors = 1
phpSettings.display_errors = 1
resources.frontController.params.displayExceptions = 1

; Give ramp_dba lots of privileges for testing convenience.
;  => TODO: Might not be able to redefine ramp_dba from scalar to array?
;  or could be a problem to be redefining ramp_dba given that smart_dba
;  is already looking it up as parent above (before doing so again here).
ramp.aclNonGuestRole.ramp_dba[] = hr_admin
ramp.aclNonGuestRole.ramp_dba[] = regist_admin
ramp.aclNonGuestRole.ramp_dba[] = registrar
ramp.aclNonGuestRole.smart_dba = ramp_dba

resources.db.params.dbname = smart_test

ramp.title = "Smart Test Environment"
ramp.applicationShortName = "Smart Test"
ramp.icon = "/images/redSmart.ico"
ramp.css = "/css/siteTesting.css"

[staging : testing]

; Define or override properties specific to a staging environment, for
; staging and testing software upgrades.  A staging environment should
; have a different look and feel from the production environment so that
; users do not confuse the two.

resources.db.params.dbname = smart_staging

ramp.title = "Smart Staging Environment"
ramp.applicationShortName = "Smart Staging"

[development : application_defaults]

; Define or override properties specific to a development version of the
; application.

phpSettings.display_startup_errors = 1
phpSettings.display_errors = 1
resources.frontController.params.displayExceptions = 1

; Timeout is in seconds.  Timeout of 0 means no timeout.
ramp.sessionTimeout = 0;

; Redefine and add new Access Control List (ACL) roles.
; The 'guest' role is hard-coded in Ramp for non-logged in users.
; The 'ramp_dba' role is for administrative users who will be able to add
; new users and define new authorization rules.  The 'developer' role has
; access to everything for developer's convenience.
ramp.aclNonGuestRole.hr_staff = hr_or_reg
ramp.aclNonGuestRole.regist_staff = hr_or_reg 
ramp.aclNonGuestRole.developer[] = hr_staff
ramp.aclNonGuestRole.developer[] = regist_staff
ramp.aclNonGuestRole.developer[] = smart_dba

; Define properties for accessing the database.
resources.db.params.username = smartdev
resources.db.params.password = "smartdev_passwd"
resources.db.params.dbname = smart_dev

; Redefine properties that control the look and feel.
ramp.applicationShortName = "Smart Dev"

; Define properties that control the activities and table settings available.
ramp.menuDirectory = APPLICATION_PATH "/devSettings"
ramp.activitiesDirectory = APPLICATION_PATH "/devSettings"
ramp.settingsDirectory = APPLICATION_PATH "/devSettings"
ramp.menuFilename = "Smart/menu.ini"
ramp.roleBasedMenus['hr_staff'] = "Smart/hrMenu.ini"
ramp.roleBasedMenus['regist_staff'] = "Smart/regMenu.ini"
ramp.roleBasedMenus['smart_dba'] = "Smart/dbaMenu.ini"
ramp.roleBasedMenus['developer'] = "devMenu.ini"
ramp.initialActivity = "Smart/index.act"

[regressiontesting : application_defaults]

; Define or override properties specific to a version used for automated
; regression testing.

phpSettings.display_startup_errors = 1
phpSettings.display_errors = 1
resources.frontController.params.displayExceptions = 1

; Timeout is in seconds.  Timeout of 0 means no timeout.
; ramp.sessionTimeout = 5;

; Define properties for accessing the database.
resources.db.params.username = smartdev
resources.db.params.password = "smartdev_passwd"
resources.db.params.dbname = smart_automated_tests

ramp.title = "Smart Regression Test Environment"
ramp.applicationShortName = "Smart Reg Test"
ramp.icon = "/images/redSmart.ico"
ramp.css = "/css/siteTesting.css"

; Automated regression tests don't use most of these.
ramp.menuDirectory =
ramp.activitiesDirectory = 
ramp.settingsDirectory = APPLICATION_PATH "/../tests/application/settings"
ramp.menuFilename = 
ramp.initialActivity = 

