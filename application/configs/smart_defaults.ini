[smart_defaults : ramp_basics]

; The ACL properties in this section are specific to an application, but are
; generally the same in different environments of the same application
; (e.g., the same across production, development, or testing environments.)

; Define Access Control List (ACL) roles.  Format:
;    ramp.aclNonGuestRole.newRole = inheritFromExistingRole
; The 'guest' role is hard-coded in Ramp for non-logged in users.
; The 'ramp_dba' role is for administrative users who will be able to add
; new users and define new authorization rules.  In this case, the
; administrative user has only guest permissions and those specifically
; authorized for the ramp_dba role.  The testing or development
; environments could give the ramp_dba role all permissions.
ramp.aclNonGuestRole.hr_or_reg = guest
ramp.aclNonGuestRole.hr_staff = hr_or_reg
ramp.aclNonGuestRole.regist_staff = hr_or_reg 
ramp.aclNonGuestRole.ramp_dba = guest
ramp.aclNonGuestRole.smart_dba = ramp_dba

; Define basic Access Control List (ACL) resources.  Format:
;    Controller actions:    "controller::action"
;    Activity directories:  "activity::index::directory"
;    Document directories:  "document::index::directory"
;    Table/Report actions:  "table::action::db_table_name"  (not setting!)
; The Activity and Document directory specifications are relative to the
; ramp.activitiesDirectory and ramp.documentRoot properties, respectively.
; Other resources are defined explicitly in Ramp/Smart source code or
; implicitly in the Authorizations table.
ramp.aclResources[] = "activity::index::."
ramp.aclResources[] = "activity::index::../docs/rampDocs"
ramp.aclResources[] = "activity::index::Admin"
ramp.aclResources[] = "document::index::."
ramp.aclResources[] = "document::index::rampDocs"
ramp.aclResources[] = "document::index::../.."
ramp.aclResources[] = "document::index::../../installation"

; Define basic Access Control List (ACL) rules.  Format:
;    "role::resource"
; The following rules give:
;    * the "guest" role (users not logged in) access to activities in
;      the application/docs/rampDocs directory (the commented-out rule
;      gives access to the top-level activities directory also)
;    * users with the ramp_dba role:
;        -- access to activities in the Admin directory.
;        -- access to several administrative actions in AuthController
; ramp.aclRules[] = "guest::activity::index::."
ramp.aclRules[] = "guest::activity::index::../docs/rampDocs"
ramp.aclRules[] = "guest::document::index::."
ramp.aclRules[] = "guest::document::index::rampDocs"
ramp.aclRules[] = "ramp_dba::activity::index::Admin"
ramp.aclRules[] = "ramp_dba::auth::reset-password"
ramp.aclRules[] = "ramp_dba::auth::validate-roles"
ramp.aclRules[] = "ramp_dba::auth::validate-acl-rules"
ramp.aclRules[] = "ramp_dba::auth::view-acl-info"
ramp.aclRules[] = "ramp_dba::lock::free-lock"
ramp.aclRules[] = "ramp_dba::document::index::../.."
ramp.aclRules[] = "ramp_dba::document::index::../../installation"

; The properties beyond this point are likely to be customized differently
; for different application environments (e.g., demos or production,
; development, or testing environments.)  The initial properties in this
; section act as defaults for other environments.

; Define properties for accessing the database.
resources.db.params.username = smartuser
resources.db.params.password = "need_password"
; resources.db.params.dbname = smart
;    (needs to be set separately in each section)

; Define properties that control the look and feel.
ramp.title = "Smart"
ramp.subtitle = "Software for Managing Academic Records and Transcripts"
ramp.applicationShortName = "Smart"
ramp.icon = "/images/blueSmart.ico"
ramp.css = "/css/site.css"

; Define the root directory for finding documentation files.
ramp.documentRoot = APPLICATION_PATH "/docs"

; Define properties that control the activities and table settings available.
ramp.menuDirectory = APPLICATION_PATH "/settings"
ramp.activitiesDirectory = APPLICATION_PATH "/settings"
ramp.settingsDirectory = APPLICATION_PATH "/settings"
ramp.menuFilename = "menu.ini"
ramp.roleBasedMenus['ramp_dba'] = "Smart/dbaMenu.ini"
ramp.roleBasedMenus['smart_dba'] = "Smart/dbaMenu.ini"
ramp.initialActivity = "index.act"
ramp.roleBasedInitActivities['ramp_dba'] = "Smart/dbaIndex.act"
ramp.roleBasedInitActivities['smart_dba'] = "Smart/dbaIndex.act"

